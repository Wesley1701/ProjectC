// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20230110140208_m2")]
    partial class m2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Property<string>("SSN")
                        .HasColumnType("char(25)");

                    b.Property<int>("Gender")
                        .HasColumnType("integer");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("SSN");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("WebApplication1.Models.HourType", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServiceID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("HourType");
                });

            modelBuilder.Entity("WebApplication1.Models.Hours", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("EmployeeID")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectID")
                        .IsRequired()
                        .HasColumnType("char(25)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Hours");
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Property<string>("NumberID")
                        .HasColumnType("char(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.Property<string>("WorkingOn")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.HasKey("NumberID");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("WebApplication1.Models.Service", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProjectID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("WebApplication1.Models.WorksOn", b =>
                {
                    b.Property<int>("Hours")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Hours"));

                    b.Property<string>("EmployeeSSN")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("char(30)");

                    b.Property<string>("ProjectNumberID")
                        .HasColumnType("char(25)");

                    b.HasKey("Hours");

                    b.HasIndex("EmployeeSSN");

                    b.HasIndex("ProjectNumberID");

                    b.ToTable("WorksOn");
                });

            modelBuilder.Entity("WebApplication1.Models.WorksOn", b =>
                {
                    b.HasOne("WebApplication1.Models.Employee", null)
                        .WithMany("Schedule")
                        .HasForeignKey("EmployeeSSN")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Project", null)
                        .WithMany("Developers")
                        .HasForeignKey("ProjectNumberID");
                });

            modelBuilder.Entity("WebApplication1.Models.Employee", b =>
                {
                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("WebApplication1.Models.Project", b =>
                {
                    b.Navigation("Developers");
                });
#pragma warning restore 612, 618
        }
    }
}
